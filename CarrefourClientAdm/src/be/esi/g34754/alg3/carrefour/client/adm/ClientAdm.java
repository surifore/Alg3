/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package be.esi.g34754.alg3.carrefour.client.adm;

import be.esi.g34754.alg3.carrefour.CarrefourException;
import be.esi.g34754.alg3.carrefour.CouleurEnum;
import be.esi.g34754.alg3.carrefour.Etat;
import be.esi.g34754.alg3.carrefour.Feu;
import be.esi.g34754.alg3.carrefour.FeuModel;
import be.esi.g34754.alg3.carrefour.client.feu.pieton.FeuPieton;
import be.esi.g34754.alg3.carrefour.client.feu.voiture.FeuVoiture;
import be.esi.g34754.alg3.carrefour.interfaces.CarrefourServeurInterface;
import be.esi.g34754.alg3.carrefour.interfaces.CarrefourView;
import be.esi.g34754.alg3.carrefour.interfaces.FeuModeleInterface;
import be.esi.g34754.rmioutils.Connection;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.rmi.RemoteException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author g34754
 */
public class ClientAdm extends javax.swing.JFrame {

    private FeuModeleInterface model;
    private final CarrefourServeurInterface serveur;
    private CarrefourView client;
    private Properties prop;
    private FeuPieton feuP_NS;
    private FeuPieton feuP_EO;
    private FeuVoiture feuV_NS;
    private FeuVoiture feuV_EO;
    private boolean visualisationDemarree;

    /**
     * Creates new form ClientAdm
     */
    public ClientAdm(CarrefourServeurInterface serveur) {
        this.serveur = serveur;
        initComponents();
        prop = new Properties();
        try {
            prop.load(new FileInputStream("../dureeFeux.properties"));
        } catch (IOException ex) {
            try {
                prop.load(new FileInputStream("dureeFeux.properties"));
            } catch (IOException ex1) {
            }
        }
        try {
            this.client = new ClientAdmImpl(this);
            serveur.addListener(client);
        } catch (RemoteException ex) {
            Logger.getLogger(ClientAdm.class.getName()).log(Level.SEVERE, null, ex);
        }
        initSliders();
        feuP_EO = new FeuPieton();
        feuP_EO.setAxeNS(false);
        feuP_NS = new FeuPieton();
        feuV_EO = new FeuVoiture();
        feuV_EO.setAxeNS(false);
        feuV_NS = new FeuVoiture();
        axeNS.add(feuV_NS);
        axeNS.add(feuP_NS);
        axeEO.add(feuV_EO);
        axeEO.add(feuP_EO);
        feuVoiture6.setAxeNS(false);
        feuVoiture7.setAxeNS(false);
        feuPieton6.setAxeNS(false);
        feuPieton7.setAxeNS(false);
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                desabonner();
            }
        });
    }

    public void desabonner() {
        try {
            serveur.removeListener(client);
        } catch (RemoteException ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        tempsReelPanel = new javax.swing.JPanel();
        feuPieton5 = new be.esi.g34754.alg3.carrefour.client.feu.pieton.FeuPieton(serveur);
        feuVoiture5 = new be.esi.g34754.alg3.carrefour.client.feu.voiture.FeuVoiture(serveur);
        feuVoiture6 = new be.esi.g34754.alg3.carrefour.client.feu.voiture.FeuVoiture(serveur);
        feuPieton6 = new be.esi.g34754.alg3.carrefour.client.feu.pieton.FeuPieton(serveur);
        feuVoiture7 = new be.esi.g34754.alg3.carrefour.client.feu.voiture.FeuVoiture(serveur);
        feuPieton7 = new be.esi.g34754.alg3.carrefour.client.feu.pieton.FeuPieton(serveur);
        feuVoiture8 = new be.esi.g34754.alg3.carrefour.client.feu.voiture.FeuVoiture(serveur);
        feuPieton8 = new be.esi.g34754.alg3.carrefour.client.feu.pieton.FeuPieton(serveur);
        admPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        PNSRouge = new javax.swing.JSlider();
        PNSVert = new javax.swing.JSlider();
        PEORouge = new javax.swing.JSlider();
        PEOOrange = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PNSOrange = new javax.swing.JSlider();
        PEOVert = new javax.swing.JSlider();
        jPanel3 = new javax.swing.JPanel();
        axeNS = new javax.swing.JPanel();
        axeEO = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        VNSRouge = new javax.swing.JSlider();
        VNSVert = new javax.swing.JSlider();
        VEORouge = new javax.swing.JSlider();
        VEOOrange = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        VNSOrange = new javax.swing.JSlider();
        VEOVert = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        sliderTousRouge = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        vitesse = new javax.swing.JSlider();
        annuler = new javax.swing.JButton();
        appliquer = new javax.swing.JButton();
        fermer = new javax.swing.JButton();
        visualiser = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administration du carrefour");
        setMinimumSize(new java.awt.Dimension(786, 779));
        setResizable(false);

        feuPieton5.setAxeNS(true);

        feuVoiture5.setAxeNS(true);

        feuVoiture8.setAxeNS(true);

        feuPieton8.setAxeNS(true);

        javax.swing.GroupLayout tempsReelPanelLayout = new javax.swing.GroupLayout(tempsReelPanel);
        tempsReelPanel.setLayout(tempsReelPanelLayout);
        tempsReelPanelLayout.setHorizontalGroup(
            tempsReelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tempsReelPanelLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(feuVoiture6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(feuPieton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tempsReelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tempsReelPanelLayout.createSequentialGroup()
                        .addComponent(feuVoiture5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(feuPieton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tempsReelPanelLayout.createSequentialGroup()
                        .addComponent(feuVoiture8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(feuPieton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(feuVoiture7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(feuPieton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        tempsReelPanelLayout.setVerticalGroup(
            tempsReelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tempsReelPanelLayout.createSequentialGroup()
                .addGroup(tempsReelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tempsReelPanelLayout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addGroup(tempsReelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(tempsReelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(feuVoiture7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(tempsReelPanelLayout.createSequentialGroup()
                                    .addGap(51, 51, 51)
                                    .addComponent(feuPieton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(tempsReelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(feuVoiture6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(tempsReelPanelLayout.createSequentialGroup()
                                    .addGap(51, 51, 51)
                                    .addComponent(feuPieton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(tempsReelPanelLayout.createSequentialGroup()
                        .addGroup(tempsReelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tempsReelPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(feuVoiture5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tempsReelPanelLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(feuPieton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(121, 121, 121)
                        .addGroup(tempsReelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(feuVoiture8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tempsReelPanelLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(feuPieton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Temps Réel", tempsReelPanel);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Feux Pietons", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 51)));

        PNSRouge.setBackground(new java.awt.Color(255, 0, 51));
        PNSRouge.setMajorTickSpacing(2);
        PNSRouge.setMaximum(5);
        PNSRouge.setMinimum(1);
        PNSRouge.setMinorTickSpacing(1);
        PNSRouge.setPaintLabels(true);
        PNSRouge.setPaintTicks(true);
        PNSRouge.setSnapToTicks(true);

        PNSVert.setBackground(new java.awt.Color(51, 255, 51));
        PNSVert.setMajorTickSpacing(2);
        PNSVert.setMaximum(5);
        PNSVert.setMinimum(1);
        PNSVert.setMinorTickSpacing(1);
        PNSVert.setPaintLabels(true);
        PNSVert.setPaintTicks(true);
        PNSVert.setSnapToTicks(true);

        PEORouge.setBackground(new java.awt.Color(255, 0, 51));
        PEORouge.setMajorTickSpacing(2);
        PEORouge.setMaximum(5);
        PEORouge.setMinimum(1);
        PEORouge.setMinorTickSpacing(1);
        PEORouge.setPaintLabels(true);
        PEORouge.setPaintTicks(true);
        PEORouge.setSnapToTicks(true);

        PEOOrange.setBackground(new java.awt.Color(255, 153, 51));
        PEOOrange.setMajorTickSpacing(2);
        PEOOrange.setMaximum(5);
        PEOOrange.setMinimum(1);
        PEOOrange.setMinorTickSpacing(1);
        PEOOrange.setPaintLabels(true);
        PEOOrange.setPaintTicks(true);
        PEOOrange.setSnapToTicks(true);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Axe Nord - Sud");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Axe Est - Ouest");

        PNSOrange.setBackground(new java.awt.Color(255, 153, 51));
        PNSOrange.setMajorTickSpacing(2);
        PNSOrange.setMaximum(5);
        PNSOrange.setMinimum(1);
        PNSOrange.setMinorTickSpacing(1);
        PNSOrange.setPaintLabels(true);
        PNSOrange.setPaintTicks(true);
        PNSOrange.setSnapToTicks(true);

        PEOVert.setBackground(new java.awt.Color(51, 255, 51));
        PEOVert.setMajorTickSpacing(2);
        PEOVert.setMaximum(5);
        PEOVert.setMinimum(1);
        PEOVert.setMinorTickSpacing(1);
        PEOVert.setPaintLabels(true);
        PEOVert.setPaintTicks(true);
        PEOVert.setSnapToTicks(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PNSVert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PEOVert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PEOOrange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PNSOrange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PNSRouge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PEORouge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PNSVert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PNSOrange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PNSRouge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PEOVert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PEOOrange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PEORouge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prévisualisation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 0)));

        axeNS.setBorder(javax.swing.BorderFactory.createTitledBorder("Axe Nord - Sud"));
        axeNS.setLayout(new java.awt.GridLayout(1, 0));

        axeEO.setBorder(javax.swing.BorderFactory.createTitledBorder("Axe Est - Ouest"));
        axeEO.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(axeNS, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(axeEO, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(axeNS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
            .addComponent(axeEO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Feux Voitures", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 51)));

        VNSRouge.setBackground(new java.awt.Color(255, 0, 51));
        VNSRouge.setMajorTickSpacing(2);
        VNSRouge.setMaximum(5);
        VNSRouge.setMinimum(1);
        VNSRouge.setMinorTickSpacing(1);
        VNSRouge.setPaintLabels(true);
        VNSRouge.setPaintTicks(true);
        VNSRouge.setSnapToTicks(true);

        VNSVert.setBackground(new java.awt.Color(51, 255, 51));
        VNSVert.setMajorTickSpacing(2);
        VNSVert.setMaximum(5);
        VNSVert.setMinimum(1);
        VNSVert.setMinorTickSpacing(1);
        VNSVert.setPaintLabels(true);
        VNSVert.setPaintTicks(true);
        VNSVert.setSnapToTicks(true);

        VEORouge.setBackground(new java.awt.Color(255, 0, 51));
        VEORouge.setMajorTickSpacing(2);
        VEORouge.setMaximum(5);
        VEORouge.setMinimum(1);
        VEORouge.setMinorTickSpacing(1);
        VEORouge.setPaintLabels(true);
        VEORouge.setPaintTicks(true);
        VEORouge.setSnapToTicks(true);

        VEOOrange.setBackground(new java.awt.Color(255, 153, 51));
        VEOOrange.setMajorTickSpacing(2);
        VEOOrange.setMaximum(5);
        VEOOrange.setMinimum(1);
        VEOOrange.setMinorTickSpacing(1);
        VEOOrange.setPaintLabels(true);
        VEOOrange.setPaintTicks(true);
        VEOOrange.setSnapToTicks(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Axe Nord - Sud");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Axe Est - Ouest");

        VNSOrange.setBackground(new java.awt.Color(255, 153, 51));
        VNSOrange.setMajorTickSpacing(2);
        VNSOrange.setMaximum(5);
        VNSOrange.setMinimum(1);
        VNSOrange.setMinorTickSpacing(1);
        VNSOrange.setPaintLabels(true);
        VNSOrange.setPaintTicks(true);
        VNSOrange.setSnapToTicks(true);

        VEOVert.setBackground(new java.awt.Color(51, 255, 51));
        VEOVert.setMajorTickSpacing(2);
        VEOVert.setMaximum(5);
        VEOVert.setMinimum(1);
        VEOVert.setMinorTickSpacing(1);
        VEOVert.setPaintLabels(true);
        VEOVert.setPaintTicks(true);
        VEOVert.setSnapToTicks(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VNSVert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VEOVert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VEOOrange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VNSOrange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VNSRouge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VEORouge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VNSVert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VNSOrange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VNSRouge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VEOVert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VEOOrange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VEORouge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel6.setText("Durée où tous les feux sont au rouge:");

        sliderTousRouge.setMajorTickSpacing(1);
        sliderTousRouge.setMaximum(10);
        sliderTousRouge.setMinimum(1);
        sliderTousRouge.setMinorTickSpacing(1);
        sliderTousRouge.setPaintLabels(true);
        sliderTousRouge.setPaintTicks(true);
        sliderTousRouge.setSnapToTicks(true);
        sliderTousRouge.setValue(2);

        jLabel5.setText("Vitesse de la visualisation:");

        vitesse.setMajorTickSpacing(1);
        vitesse.setMaximum(10);
        vitesse.setMinimum(1);
        vitesse.setPaintLabels(true);
        vitesse.setPaintTicks(true);
        vitesse.setSnapToTicks(true);
        vitesse.setToolTipText("");
        vitesse.setName(""); // NOI18N

        annuler.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        annuler.setForeground(new java.awt.Color(255, 0, 0));
        annuler.setText("Réinitialiser");
        annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerActionPerformed(evt);
            }
        });

        appliquer.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        appliquer.setForeground(new java.awt.Color(51, 153, 0));
        appliquer.setText("Appliquer");
        appliquer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appliquerActionPerformed(evt);
            }
        });

        fermer.setText("Sauvegarder");
        fermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fermerActionPerformed(evt);
            }
        });

        visualiser.setText("Visualiser");
        visualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualiserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout admPanelLayout = new javax.swing.GroupLayout(admPanel);
        admPanel.setLayout(admPanelLayout);
        admPanelLayout.setHorizontalGroup(
            admPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(admPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(admPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(admPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sliderTousRouge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(admPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vitesse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(visualiser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(annuler)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(appliquer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fermer)))
                .addContainerGap())
        );
        admPanelLayout.setVerticalGroup(
            admPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, admPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(admPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sliderTousRouge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(admPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(vitesse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(admPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(admPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(annuler)
                            .addComponent(appliquer)
                            .addComponent(fermer)
                            .addComponent(visualiser))))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Administration", admPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void appliquerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appliquerActionPerformed
        if (valide())
            try {
                ecrireProperties();
                serveur.setArret();
            } catch (RemoteException ex) {
                Logger.getLogger(ClientAdm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_appliquerActionPerformed

    private void annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerActionPerformed
        setCurrentValues();
    }//GEN-LAST:event_annulerActionPerformed

    private void fermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fermerActionPerformed
        ecrireProperties();
    }//GEN-LAST:event_fermerActionPerformed

    private void visualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualiserActionPerformed
        if (!visualisationDemarree) {
            model = new FeuModel(vitesse.getValue());
            setValuesModel();
            feuP_EO.setModel(model);
            feuP_NS.setModel(model);
            feuV_EO.setModel(model);
            feuV_NS.setModel(model);
            model.demarrer();
            visualisationDemarree = true;
        } else {
            model.arreter();
            model = null;
            feuP_EO.removeFromModel();
            feuP_EO.clearLed();
            feuP_NS.removeFromModel();
            feuP_NS.clearLed();
            feuV_EO.removeFromModel();
            feuV_EO.clearLed();
            feuV_NS.removeFromModel();
            feuV_NS.clearLed();
            visualisationDemarree = false;
        }
    }//GEN-LAST:event_visualiserActionPerformed

    public static void main(String[] args) {
        Connection<CarrefourServeurInterface> conn = new Connection("Carrefour", "localhost", 1099);
        conn.setVisible(true);
        CarrefourServeurInterface model;
        model = conn.getRemoteObject();
        ClientAdm gui = new ClientAdm(model);
        gui.setVisible(true);
        gui.pack();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider PEOOrange;
    private javax.swing.JSlider PEORouge;
    private javax.swing.JSlider PEOVert;
    private javax.swing.JSlider PNSOrange;
    private javax.swing.JSlider PNSRouge;
    private javax.swing.JSlider PNSVert;
    private javax.swing.JSlider VEOOrange;
    private javax.swing.JSlider VEORouge;
    private javax.swing.JSlider VEOVert;
    private javax.swing.JSlider VNSOrange;
    private javax.swing.JSlider VNSRouge;
    private javax.swing.JSlider VNSVert;
    private javax.swing.JPanel admPanel;
    private javax.swing.JButton annuler;
    private javax.swing.JButton appliquer;
    private javax.swing.JPanel axeEO;
    private javax.swing.JPanel axeNS;
    private javax.swing.JButton fermer;
    private be.esi.g34754.alg3.carrefour.client.feu.pieton.FeuPieton feuPieton5;
    private be.esi.g34754.alg3.carrefour.client.feu.pieton.FeuPieton feuPieton6;
    private be.esi.g34754.alg3.carrefour.client.feu.pieton.FeuPieton feuPieton7;
    private be.esi.g34754.alg3.carrefour.client.feu.pieton.FeuPieton feuPieton8;
    private be.esi.g34754.alg3.carrefour.client.feu.voiture.FeuVoiture feuVoiture5;
    private be.esi.g34754.alg3.carrefour.client.feu.voiture.FeuVoiture feuVoiture6;
    private be.esi.g34754.alg3.carrefour.client.feu.voiture.FeuVoiture feuVoiture7;
    private be.esi.g34754.alg3.carrefour.client.feu.voiture.FeuVoiture feuVoiture8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JSlider sliderTousRouge;
    private javax.swing.JPanel tempsReelPanel;
    private javax.swing.JToggleButton visualiser;
    private javax.swing.JSlider vitesse;
    // End of variables declaration//GEN-END:variables

    private void setMaximum() {
        VNSVert.setMaximum(Integer.parseInt(prop.getProperty("maxVert", "15")));
        VNSOrange.setMaximum(Integer.parseInt(prop.getProperty("maxOrange", "10")));
        VNSRouge.setMaximum(Integer.parseInt(prop.getProperty("maxRouge", "20")));
        PNSVert.setMaximum(Integer.parseInt(prop.getProperty("maxVert", "15")));
        PNSOrange.setMaximum(Integer.parseInt(prop.getProperty("maxOrange", "10")));
        PNSRouge.setMaximum(Integer.parseInt(prop.getProperty("maxRouge", "20")));
        VEOVert.setMaximum(Integer.parseInt(prop.getProperty("maxVert", "15")));
        VEOOrange.setMaximum(Integer.parseInt(prop.getProperty("maxOrange", "10")));
        VEORouge.setMaximum(Integer.parseInt(prop.getProperty("maxRouge", "20")));
        PEOVert.setMaximum(Integer.parseInt(prop.getProperty("maxVert", "15")));
        PEOOrange.setMaximum(Integer.parseInt(prop.getProperty("maxOrange", "10")));
        PEORouge.setMaximum(Integer.parseInt(prop.getProperty("maxRouge", "20")));
        sliderTousRouge.setMaximum(Integer.parseInt(prop.getProperty("maxTousRouge", "10")));
    }

    private void setMinimum() {
        VNSVert.setMinimum(Integer.parseInt(prop.getProperty("minVert", "3")));
        VNSOrange.setMinimum(Integer.parseInt(prop.getProperty("minOrange", "1")));
        VNSRouge.setMinimum(Integer.parseInt(prop.getProperty("minRouge", "5")));
        PNSVert.setMinimum(Integer.parseInt(prop.getProperty("minVert", "3")));
        PNSOrange.setMinimum(Integer.parseInt(prop.getProperty("minOrange", "1")));
        PNSRouge.setMinimum(Integer.parseInt(prop.getProperty("minRouge", "5")));
        VEOVert.setMinimum(Integer.parseInt(prop.getProperty("minVert", "3")));
        VEOOrange.setMinimum(Integer.parseInt(prop.getProperty("minOrange", "1")));
        VEORouge.setMinimum(Integer.parseInt(prop.getProperty("minRouge", "5")));
        PEOVert.setMinimum(Integer.parseInt(prop.getProperty("minVert", "3")));
        PEOOrange.setMinimum(Integer.parseInt(prop.getProperty("minOrange", "1")));
        PEORouge.setMinimum(Integer.parseInt(prop.getProperty("minRouge", "5")));
        sliderTousRouge.setMinimum(Integer.parseInt(prop.getProperty("minTousRouge", "1")));
    }

    private void setCurrentValues() {
        VNSVert.setValue(Integer.parseInt(prop.getProperty("VoitureVert_NS", "3")));
        VNSOrange.setValue(Integer.parseInt(prop.getProperty("VoitureOrange_NS", "1")));
        VNSRouge.setValue(Integer.parseInt(prop.getProperty("VoitureRouge_NS", "5")));
        PNSVert.setValue(Integer.parseInt(prop.getProperty("PietonVert_NS", "3")));
        PNSOrange.setValue(Integer.parseInt(prop.getProperty("PietonOrange_NS", "1")));
        PNSRouge.setValue(Integer.parseInt(prop.getProperty("PietonRouge_NS", "5")));
        VEOVert.setValue(Integer.parseInt(prop.getProperty("VoitureVert_EO", "3")));
        VEOOrange.setValue(Integer.parseInt(prop.getProperty("VoitureOrange_EO", "1")));
        VEORouge.setValue(Integer.parseInt(prop.getProperty("VoitureRouge_EO", "5")));
        PEOVert.setValue(Integer.parseInt(prop.getProperty("PietonVert_EO", "3")));
        PEOOrange.setValue(Integer.parseInt(prop.getProperty("PietonOrange_EO", "1")));
        PEORouge.setValue(Integer.parseInt(prop.getProperty("PietonRouge_EO", "5")));
        sliderTousRouge.setValue(Integer.parseInt(prop.getProperty("TousRouge", "1")));
    }

    private void initSliders() {
        setMaximum();
        setMinimum();
        setCurrentValues();
    }

    private void setValuesModel() {
        Feu feu = model.getEtat().getFeuxP_EO();
        feu.setVert(PEOVert.getValue());
        feu.setOrange(PEOOrange.getValue());
        feu.setRouge(PEORouge.getValue());

        feu = model.getEtat().getFeuxV_EO();
        feu.setVert(VEOVert.getValue());
        feu.setOrange(VEOOrange.getValue());
        feu.setRouge(VEORouge.getValue());

        feu = model.getEtat().getFeuxP_NS();
        feu.setVert(PNSVert.getValue());
        feu.setOrange(PNSOrange.getValue());
        feu.setRouge(PNSRouge.getValue());

        feu = model.getEtat().getFeuxV_NS();
        feu.setVert(VNSVert.getValue());
        feu.setOrange(VNSOrange.getValue());
        feu.setRouge(VNSRouge.getValue());

        model.setTousRouge(sliderTousRouge.getValue());
    }

    private boolean valide() {
        String erreurs = "Liste des erreurs:\n";
        boolean erreur = false;
        try {
            model = new FeuModel(1);
            setValuesModel();
            Etat etat = model.getEtat();
            int[] restant;
            restant = new int[4];
            restant[0] = model.getEtat().getFeuxP_NS().getRouge();
            restant[1] = model.getEtat().getFeuxV_NS().getVert();
            restant[2] = model.getEtat().getFeuxP_EO().getVert();
            restant[3] = model.getEtat().getFeuxV_EO().getRouge();
            for (int i = 0; i < model.getEtat().getDureeCycle(); i++) {
                restant[0] = mAJ(model.getEtat().getFeuxP_NS(), restant[0]);
                restant[1] = mAJ(model.getEtat().getFeuxP_EO(), restant[1]);
                restant[2] = mAJ(model.getEtat().getFeuxV_NS(), restant[2]);
                restant[3] = mAJ(model.getEtat().getFeuxV_EO(), restant[3]);
                try {
                    etat.validation();
                } catch (CarrefourException ex) {
                    erreurs += ex.getMessage();
                    erreur = true;
                }
            }
        } catch (CarrefourException ex) {
            erreurs += ex.getMessage();
            erreur = true;
        }
        if (erreur) {
            JOptionPane.showMessageDialog(this,
                    "Erreur lors de la validation des paramètres:\n" + erreurs,
                    "Erreur de paramètres", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private int mAJ(Feu feu, int restant) {
        if (restant == 0)
            restant = feu.setEtatSuivant();
        restant--;
        if (!feu.getEtat().getCouleur().equals(CouleurEnum.ROUGE)) {
            if (feu.getEtat().getCouleur().equals(CouleurEnum.VERT))
                restant = 0;
            if (restant == 0)
                restant = feu.setEtatSuivant();
            restant--;
        }

        return restant;
    }

    public void notifieTousRouge() throws RemoteException {
        model = new FeuModel(1);
        setValuesModel();
        serveur.setModel(model);
    }

    private void ecrireProperties() {
        prop.setProperty("VoitureVert_NS", "" + VNSVert.getValue());
        prop.setProperty("VoitureOrange_NS", "" + VNSOrange.getValue());
        prop.setProperty("VoitureRouge_NS", "" + VNSRouge.getValue());
        prop.setProperty("PietonVert_NS", "" + PNSVert.getValue());
        prop.setProperty("PietonOrange_NS", "" + PNSOrange.getValue());
        prop.setProperty("PietonRouge_NS", "" + PNSRouge.getValue());
        prop.setProperty("VoitureVert_EO", "" + VEOVert.getValue());
        prop.setProperty("VoitureOrange_EO", "" + VEOOrange.getValue());
        prop.setProperty("VoitureRouge_EO", "" + VEORouge.getValue());
        prop.setProperty("PietonVert_EO", "" + PEOVert.getValue());
        prop.setProperty("PietonOrange_EO", "" + PEOOrange.getValue());
        prop.setProperty("PietonRouge_EO", "" + PEORouge.getValue());
        prop.getProperty("TousRouge", "" + sliderTousRouge.getValue());
        try {
            prop.store(new FileOutputStream("src/be/esi/g34754/alg3/carrefour/client/adm/dureeFeux.properties"), "Sauvegarde des paramètres");
        } catch (IOException ex) {
            Logger.getLogger(ClientAdm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
